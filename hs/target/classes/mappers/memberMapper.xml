<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.hs.mapper.MemberMapperInter">


	<delete id="deleteMember">
		DELETE
		FROM
			member
		WHERE
			uuid = #{uuid}
	</delete>
	
	<delete id="deleteCode">
		DELETE
		FROM
			member_connect
		WHERE
			c_code = #{code}
			AND d_status='0'
	</delete>

	<update id="clearCcode">
		UPDATE
			member
		SET
			c_code = ''
		WHERE
			uuid = #{uuid}
	</update>
	
	<update id="deleteMemberConnectU2">
		UPDATE
			member_connect
		SET
			u2 = ''
		WHERE
			c_code = #{code}
			AND d_status='0'
	</update>
	
	<update id="changeMemberConnectUUID">
		UPDATE
			member_connect
		SET
			u1 = u2
			, u2 = ''
		WHERE
			c_code = #{code}
			AND d_status='0'
	</update>
	
	<update id="tempCodeChange">
		UPDATE
			member
		SET
			temp_code = c_code
		WHERE
			uuid = #{uuid}
	</update>
	
	<update id="disabledCode">
		UPDATE
			member_connect
		SET
			d_status = '1'
		WHERE
			c_code = #{temp_code}
			AND d_status='0'
	</update>
	
	<update id="disconnectMember">
		UPDATE
			member
		SET
			c_code = ''
			, temp_code = #{code}
		WHERE
			uuid = #{uuid}
	</update>
	
	<update id="disconnectMemberConnect">
		UPDATE
			member_connect
		SET
			d_limit = #{d_limit}
			, d_uuid = #{uuid}
		WHERE
			c_code = #{code}
			AND d_status='0'
	</update>

	<!-- 비밀번호 변경 by uuid -->
	<update id="changePasswd">
	<![CDATA[
		UPDATE
			member
		SET
			passwd = #{passwd}
		WHERE
			uuid = #{uuid}
	]]>
	</update>
	
	<select id="getCcodebyUuid" resultType="string">
	<![CDATA[
		SELECT NVL(c_code, '')
		FROM member
		WHERE
			uuid = #{uuid}
	]]>
	</select>
	
	<select id="checkMemberWithSessionKey" resultType="MemberDTO">
	<![CDATA[
		SELECT
			*
		FROM
			member
		WHERE
			session_key = #{session_key} AND
			session_limit > sysdate
	]]>
	</select>

	<!-- 로그인 시 session정보를 저장한다 -->
	<update id="keepLogin">
	<![CDATA[
		UPDATE
			member
		SET
			session_key = #{session_key}
			, session_limit = #{session_limit}
		WHERE
			uuid = #{uuid}
	]]>
	</update>
	
	
	<!-- 연결된 계정 정보를 가져온다 -->
	<select id="getConnectedAccount" resultType="MemberDTO">
	<![CDATA[
		SELECT
			uuid
			, email
			, name
			, birth
			, begin_date
			, last_login
			, profile
			, temp_code
			, c_code
			, gender
		FROM member
		WHERE
			c_code = (SELECT c_code FROM MEMBER WHERE uuid = #{uuid})
			AND uuid != #{uuid}
	]]>
	</select>

	<!-- update last_login -->
	<update id="lastLoginUpdate">
	<![CDATA[
		UPDATE member
		SET last_login = sysdate
		WHERE uuid = #{uuid}
	]]>
	</update>

	<!-- update profile -->
	<update id="updateProfile">
	<![CDATA[
		UPDATE member
		SET gender = #{gender}
			, name = #{name}
			, birth = #{birth}
			, begin_date = #{begin_date}
			, last_login = sysdate
		WHERE uuid = #{uuid}
	]]>
	</update>
	
	<!-- update photo -->
	<update id="updatePhoto">
	<![CDATA[
		UPDATE member
		SET profile = #{photo}
		WHERE uuid = #{uuid}
	]]>
	</update>

	<!-- member recoard return by uuid -->
	<select id="getMemberByEmail" resultType="MemberDTO">
	<![CDATA[
		SELECT *
		FROM member
		WHERE email = #{email}
	]]>
	</select>

	<!-- member recoard return by uuid -->
	<select id="getMemberByUuid" resultType="MemberDTO">
	<![CDATA[
		SELECT *
		FROM member
		WHERE uuid = #{uuid}
	]]>
	</select>

	<!-- c_code select -->
	<select id="validCode" resultType="_int">
	<![CDATA[
		SELECT count(*)
		FROM member_connect
		WHERE u2 = #{uuid}
	]]>
	</select>
	
	<!-- member c_code update -->
	<update id="updateMemberCode">
	<![CDATA[
		UPDATE member
		SET c_code = '${code}'
		WHERE temp_code = #{code}
			or uuid = #{uuid}
	]]>
	</update>

	<!-- member_connect u2 update -->
	<update id="updateMemberConnectCode">
	<![CDATA[
		UPDATE member_connect
		SET u2 = '${uuid}'
			, d_limit = ''
			, d_uuid = ''
		WHERE c_code = #{code}
			AND d_status = '0'
	]]>
	</update>

	<!-- c_code select -->
	<select id="getCode" resultType="MemberConnectDTO">
	<![CDATA[
		SELECT *
		FROM member_connect
		WHERE c_code = #{code}
			AND d_status = '0'
	]]>
	</select>

	<!-- member 테이블 CREATE -->
	<insert id="createMember">
	<![CDATA[
		INSERT INTO member (no, uuid, email, passwd, regdt, last_login, temp_code)
		VALUES(
		    (SELECT NVL(MAX(no+1), 0) FROM member)
		    , #{uuid}
		    , #{email}
		    , #{passwd}
		    , sysdate
		    , sysdate
		    , #{code}
		)
	]]>
	</insert>
	
	<!-- member_connect 테이블 CREATE -->
	<insert id="createMemberConnect">
	<![CDATA[
		INSERT INTO member_connect (c_no, c_code, u1)
		VALUES(
		   (SELECT NVL(MAX(c_no+1), 0) FROM member_connect)
		   , #{code}
		   , #{uuid}
		)
	]]>
	</insert>
	
	<!-- 이메일 중복 확인 -->
	<select id="duplicateEmail" resultType="_int">
	<![CDATA[
		SELECT count(*)
		FROM member
		WHERE email = #{email}
	]]>
	</select>
	
	<!-- 코드발급시 중복코드방지를 위해 c_code를 모두 가져온다 -->
	<select id="getAllcode" resultType="string">
	<![CDATA[
		SELECT c_code
		FROM member_connect
	]]>
	</select>
	
</mapper>